name: CI/CD Pipeline

# 3 triggers for running the pipeline
on:
  push:
    branches: [main]
  #Allow this workflow to be run manually from the GitHub Actions user interface.
  # Github repo > Actions > Run workflow
  workflow_dispatch:
  #Run this workflow automatically at a specific, recurring time, much like a traditional cron job
  schedule:
    - cron: "0 3 * * *" # Runs every day at 3 AM UTC

jobs:
  db-init:
    runs-on: ubuntu-latest
    steps:
      # download repo code to virtual enviorment
      - uses: actions/checkout@v4
      - name: Set up Python
        # specific action to donwload required python version as mentioed with
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"
      # runs the necessary commands
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r server/requirements.txt
      - name: Run DB initialization
        env:
          MONGODB_URI: ${{ secrets.MONGODB_URI }}
        run: python server/init_db.py

  prefetch:
    runs-on: ubuntu-latest
    needs: db-init
    if: github.event_name == 'push' || github.event_name == 'schedule' || github.event_name == 'workflow_dispatch'
    steps:
      - uses: actions/checkout@v4
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r server/requirements.txt
      - name: Run prefetch script
        env:
          MONGODB_URI: ${{ secrets.MONGODB_URI }}
        run: python server/prefetch_articles.py

  build-and-deploy-server:
    runs-on: ubuntu-latest
    needs: [db-init, prefetch]
    steps:
      - uses: actions/checkout@v4
      - name: Build server Docker image
        run: docker build -t server-app ./server
      - name: Deploy to Render (Server)
        run: curl -X POST ${{ secrets.RENDER_SERVER_DEPLOY_HOOK }}

  build-and-deploy-web:
    runs-on: ubuntu-latest
    needs: build-and-deploy-server
    steps:
      - uses: actions/checkout@v4
      - name: Build web Docker image
        run: docker build -t web-app ./web
      - name: Deploy to Render (Web)
        run: curl -X POST ${{ secrets.RENDER_WEB_DEPLOY_HOOK }}
