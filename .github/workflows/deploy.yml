name: CI/CD Pipeline

# 3 triggers for running the pipeline
on:
  push:
    branches: [main]
  #Allow this workflow to be run manually from the GitHub Actions user interface.
  # Github repo > Actions > Run workflow
  workflow_dispatch:
  #Run this workflow automatically at a specific, recurring time, much like a traditional cron job
  schedule:
    - cron: "0 3 * * *" # Runs every day at 3 AM UTC

jobs:
  db-init:
    runs-on: ubuntu-latest
    steps:
      # download repo code to virtual enviorment
      - uses: actions/checkout@v4
      - name: Set up Python
        # specific action to donwload required python version as mentioed with
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"
      # runs the necessary commands
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r server/requirements.txt
      - name: Run DB initialization
        env:
          MONGODB_URI: ${{ secrets.MONGODB_URI }}
        run: python server/init_db.py

  prefetch:
    runs-on: ubuntu-latest
    needs: db-init
    if: github.event_name == 'push' || github.event_name == 'schedule' || github.event_name == 'workflow_dispatch'
    steps:
      - uses: actions/checkout@v4
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r server/requirements.txt
      - name: Run prefetch script
        env:
          MONGODB_URI: ${{ secrets.MONGODB_URI }}
          RSS_FEED_URL: ${{ secrets.RSS_FEED_URL }}
        run: python server/prefetch_articles.py

  build-and-deploy-server:
    runs-on: ubuntu-latest
    needs: [db-init, prefetch]
    permissions:
      packages: write # Crucial: Grant permission to push to GHCR
      contents: read # Often needed for actions/checkout
    steps:
      - uses: actions/checkout@v4

      - name: Log in to GHCR
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build server Docker image
        run: docker build -t ghcr.io/${{ github.repository_owner }}/editorialServer-app:latest ./server

      - name: Push server Docker image
        run: docker push ghcr.io/${{ github.repository_owner }}/editorialServer-app:latest

      - name: Trigger Render Deploy (Server)
        # use Render's API to update the image reference
        # This requires a Render API Key
        run: |
          curl -X POST \
            -H "Accept: application/json" \
            -H "Authorization: Bearer ${{ secrets.RENDER_API_KEY }}" \
            -H "Content-Type: application/json" \
            -d '{ "imageUrl": "ghcr.io/${{ github.repository }}/editorialServer-app:latest" }' \
            https://api.render.com/v1/services/${{ secrets.RENDER_SERVER_SERVICE_ID }}/deploys
        env:
          # This is the full image URL with the specific tag you want Render to pull
          IMAGE_TAG_TO_DEPLOY: ghcr.io/${{ github.repository }}/server-app:latest
          # We'll use the 'latest' tag for simplicity, but you could use the SHA:
          # IMAGE_TAG_TO_DEPLOY: ghcr.io/${{ github.repository }}/server-app:${{ github.sha }}

  build-and-deploy-web:
    runs-on: ubuntu-latest
    needs: build-and-deploy-server
    permissions:
      packages: write # Crucial: Grant permission to push to GHCR
      contents: read # Often needed for actions/checkout
    steps:
      - uses: actions/checkout@v4

      - name: Log in to GHCR
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build web Docker image
        run: docker build -t ghcr.io/${{ github.repository_owner }}/editorialWeb-app:latest ./web

      - name: Push web Docker image
        run: docker push ghcr.io/${{ github.repository_owner }}/editorialWeb-app:latest

      - name: Trigger Render Deploy (Web)
        run: |
          curl -X POST \
            -H "Accept: application/json" \
            -H "Authorization: Bearer ${{ secrets.RENDER_API_KEY }}" \
            -H "Content-Type: application/json" \
            -d '{ "imageUrl": "ghcr.io/${{ github.repository }}/web-app:latest" }' \
            https://api.render.com/v1/services/${{ secrets.RENDER_WEB_SERVICE_ID }}/deploys
        env:
          IMAGE_TAG_TO_DEPLOY: ghcr.io/${{ github.repository }}/web-app:latest
