name: CI/CD Pipeline

# 3 triggers for running the pipeline
on:
  push:
    branches: [main]
  #Allow this workflow to be run manually from the GitHub Actions user interface.
  # Github repo > Actions > Run workflow
  workflow_dispatch:
  #Run this workflow automatically at a specific, recurring time, much like a traditional cron job
  schedule:
    - cron: "0 3 * * *" # Runs every day at 3 AM UTC

jobs:
  db-init:
    runs-on: ubuntu-latest
    steps:
      # download repo code to virtual enviorment
      - uses: actions/checkout@v4
      - name: Set up Python
        # specific action to donwload required python version as mentioed with
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"
      # runs the necessary commands
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r server/requirements.txt
      - name: Run DB initialization
        env:
          MONGODB_URI: ${{ secrets.MONGODB_URI }}
        run: python server/init_db.py

  prefetch:
    runs-on: ubuntu-latest
    needs: db-init
    if: github.event_name == 'push' || github.event_name == 'schedule' || github.event_name == 'workflow_dispatch'
    steps:
      - uses: actions/checkout@v4
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r server/requirements.txt
      - name: Run prefetch script
        env:
          MONGODB_URI: ${{ secrets.MONGODB_URI }}
          RSS_FEED_URL: ${{ secrets.RSS_FEED_URL }}
        run: python server/prefetch_articles.py

  build-and-deploy-server:
    runs-on: ubuntu-latest
    needs: [db-init, prefetch]
    permissions:
      packages: write # Crucial: Grant permission to push to GHCR
      contents: read # Often needed for actions/checkout

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Log in to GHCR
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build and Push Server Docker Image
        uses: docker/build-push-action@v5
        with:
          context: ./server # Path to your server's Dockerfile context
          file: ./server/dockerfile # Path to your server's Dockerfile
          push: true # This will push the image to GHCR
          tags: |
            ghcr.io/varmadev390/the_editorial/server-app:latest
          platforms: linux/amd64

      - name: Trigger Render Deploy (Server)
        env:
          IMAGE_TAG_TO_DEPLOY: ghcr.io/varmadev390/the_editorial/server-app:latest
          RENDER_SERVER_SERVICE_ID: ${{ secrets.RENDER_SERVER_SERVICE_ID }}
          RENDER_API_KEY: ${{ secrets.RENDER_API_KEY }}
        run: |
          curl -X POST \
            -H "Accept: application/json" \
            -H "Authorization: Bearer $RENDER_API_KEY" \
            -H "Content-Type: application/json" \
            -d '{ "imageUrl": "'"$IMAGE_TAG_TO_DEPLOY"'" }' \
            https://api.render.com/v1/services/$RENDER_SERVER_SERVICE_ID/deploys

  build-and-deploy-web:
    runs-on: ubuntu-latest
    needs: build-and-deploy-server
    permissions:
      packages: write # Crucial: Grant permission to push to GHCR
      contents: read # Often needed for actions/checkout
    steps:
      - uses: actions/checkout@v4

      - name: Log in to GHCR
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build and Push Web Docker Image
        uses: docker/build-push-action@v5
        with:
          context: ./web
          file: ./web/dockerfile
          push: true
          tags: |
            ghcr.io/varmadev390/the_editorial/editorialweb-app:latest
          platforms: linux/amd64

      - name: Trigger Render Deploy (Web)
        env:
          IMAGE_TAG_TO_DEPLOY: ghcr.io/varmadev390/the_editorial/editorialweb-app:latest
          RENDER_WEB_SERVICE_ID: ${{ secrets.RENDER_WEB_SERVICE_ID }}
          RENDER_API_KEY: ${{ secrets.RENDER_API_KEY }}
        run: |
          curl -X POST \
            -H "Accept: application/json" \
            -H "Authorization: Bearer $RENDER_API_KEY" \
            -H "Content-Type: application/json" \
            -d '{ "imageUrl": "'"$IMAGE_TAG_TO_DEPLOY"'" }' \
            https://api.render.com/v1/services/$RENDER_WEB_SERVICE_ID/deploys
